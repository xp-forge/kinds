<?php namespace lang\kind;

use lang\XPClass;
use lang\ClassFormatException;

module xp-forge/kinds {

  /**
   * Initializes this module, registering class loader for compile-time
   * transformations based on the classes inside the `lang.kind.transformation`
   * package.
   */
  public function initialize() {
    spl_autoload_register(function($class) {
      if (false === $p= strpos($class, '»')) return false;

      $transformation= substr($class, 0, $p);
      $type= new XPClass(substr($class, $p + 2));  // strlen("»")
      if (!class_exists($transformation)) {
        throw new ClassFormatException('No compile-time transformation named '.strtr($transformation, '\\', '.'));
      }

      $body= (new $transformation())->transform($type);
      $p= strrpos($class, '\\');
      $code= 'namespace '.substr($class, 0, $p).'; trait '.substr($class, $p + 1).' { '.$body.' }';
      eval($code);
      return true;
    });
  }
}