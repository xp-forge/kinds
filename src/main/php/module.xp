<?php namespace lang\partial;

use lang\mirrors\TypeMirror;
use lang\ClassFormatException;

module xp-forge/partial {
  private static $verbs= ['\\with\\', '\\is\\', '\\including\\'];

  /**
   * Initializes this module, registering class loader for compile-time
   * transformations based on the classes extending the base class
   * `lang.partial.Transformation`.
   */
  public function initialize() {
    spl_autoload_register(function($class) {
      foreach (self::$verbs as $verb) {
        if ($p= strpos($class, $verb)) {
          $cl= \xp::$cll;
          $l= strlen($verb);
          \xp::$cll= 0;
          try {
            $mirror= new TypeMirror(substr($class, 0, $p));
            $transform= $mirror->resolve(substr($class, $p + $l));

            if ($transform->kind()->isTrait()) {
              class_alias(strtr($transform->name(), '.', '\\'), $class);
            } else {
              $p= strrpos($class, '\\');
              $body= $transform->constructor()->newInstance()->transform($mirror);
              $code= 'namespace '.substr($class, 0, $p).'; trait '.substr($class, $p + 1).' { '.$body.' }';
              eval($code);
            }
          } finally {
            \xp::$cll= $cl;
          }
          return true;
        }
      }
      return false;
    });
  }
}