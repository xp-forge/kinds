<?php namespace lang\partial;

use lang\mirrors\TypeMirror;
use lang\ClassFormatException;

module xp-forge/partial {

  /**
   * Initializes this module, registering class loader for compile-time
   * transformations based on the classes extending the base class
   * `lang.partial.Transformation`.
   */
  public function initialize() {
    spl_autoload_register(function($class) {
      if (false === $p= strpos($class, '\\including\\')) return false;

      $cl= \xp::$cll;
      \xp::$cll= 0;
      try {
        $mirror= new TypeMirror(substr($class, 0, $p));
        $transform= $mirror->resolve(substr($class, $p + 11));   // strlen('\\including\\')

        $body= $transform->constructor()->newInstance()->transform($mirror);
        $code= 'namespace '.substr($class, 0, $p + 10).'; trait '.substr($class, $p + 11).' { '.$body.' }';
        eval($code);
      } finally {
        \xp::$cll= $cl;
      }

      return true;
    });
  }
}